

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    ports:
      - "${DB_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./mysql-db/user.sql:/docker-entrypoint-initdb.d/user.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - app-network

  authentication-service:
    build:
      context: ./server/authentication-service
      dockerfile: Dockerfile
    ports:
      - "${AUTHENTICATION_SERVICE_PORT}:${AUTHENTICATION_SERVICE_PORT}"
    networks:
      - app-network
    environment:
      SPRING_PROFILES_ACTIVE: ${ACTIVE_PROFILE}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  common-data-service:
    build:
      context: ./server/common-data-service
      dockerfile: Dockerfile
    ports:
      - "${COMMON_DATA_SERVICE_PORT}:${COMMON_DATA_SERVICE_PORT}"
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy

  payment-service:
    build:
      context: ./server/payment-service
      dockerfile: Dockerfile
    ports:
      - "${PAYMENT_SERVICE_PORT}:${PAYMENT_SERVICE_PORT}"
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  search-suggestion-service:
    build:
      context: ./server/search-suggestion-service
      dockerfile: Dockerfile
    ports:
      - "${SEARCH_SUGGESTION_SERVICE_PORT}:${SEARCH_SUGGESTION_SERVICE_PORT}"
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "${REACT_APP_PORT}:${REACT_APP_PORT}"
    networks:
      - app-network
    depends_on:
      authentication-service:
        condition: service_healthy

networks:
  app-network:
    driver: bridge
